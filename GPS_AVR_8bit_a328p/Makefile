HEXFILE = main.hex
OUTFILE = $(HEXFILE:.hex=.out)
EEPROMFILE = test.hex 
CXX = avr-g++
CFLAGS = -mmcu=atmega328p -Os -Wall -std=c++0x
PROGRAMMER = avrisp2
CHIP = atmega328p

# sources include all .cpp files except those with "test" in the name
SOURCES = $(filter-out $(wildcard */*test*.cpp) $(wildcard *test*.cpp), $(wildcard *.cpp) $(wildcard */*.cpp))

# directory for object files
OBJ_DIR = obj

# for convinience, a list of all sources stripped of prefixes, replace .cpp with .o and appended with the object directory
OBJECTS = $(addprefix $(OBJ_DIR)/, $(notdir $(SOURCES:.cpp=.o)))

all: DEPS $(OBJECTS)
	$(CXX) $(CFLAGS) $(OBJECTS) -o $(OUTFILE)
	avr-objcopy -R .eeprom -O ihex $(OUTFILE) $(HEXFILE)
	avr-objcopy -j .eeprom --change-section-lma .eeprom=0 -O ihex $(OUTFILE) $(EEPROMFILE)
	avr-size $(OUTFILE)
	rm $(OUTFILE)

# has no dependencies listed here, because all dependencies will be generated by DEPS
%.o:
	$(CXX) $(CFLAGS) $< -c -o $(OBJ_DIR)/$(notdir $@)

# generates dependencies
DEPS:
	$(CXX) -mmcu=atmega328p -MM $(SOURCES) | sed 's|[a-zA-Z0-9_-]*\.o|$(OBJ_DIR)/&|' > dependencies.dep
	
-include dependencies.dep

# removes output files
clean:
	find . -name "*.o" -exec rm -f {} \;
	find . -name "*.hex" -exec rm -f {} \;
	find . -name "*.out" -exec rm -f {} \;
	find . -name "*.map" -exec rm -f {} \;
	find . -name "*.pyc" -exec rm -f {} \;
	find . -name "*.dep" -exec rm -f {} \;
	find . -name "*.d" -exec rm -f {} \;

# uploads onto chip
upload:
	sudo avrdude -c $(PROGRAMMER) -p $(CHIP) -U flash:w:$(HEXFILE)

# upload eeprom
eeprom:
	sudo avrdude -c $(PROGRAMMER) -p $(CHIP) -U eeprom:w:$(EEPROMFILE)

# checks low fuse bits
checklowfuse:
	sudo avrdude -c $(PROGRAMMER) -p $(CHIP) -U lfuse:r:-:h

# sets low fuse bits to default
setlowfuse:
	sudo avrdude -c $(PROGRAMMER) -p $(CHIP) -U lfuse:w:0xFF:m
